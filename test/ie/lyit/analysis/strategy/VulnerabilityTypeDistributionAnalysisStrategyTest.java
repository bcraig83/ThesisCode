package ie.lyit.analysis.strategy;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import ie.lyit.analysis.strategy.analysisresult.VulnerabilityTypeDistributionAnalysisStrategy;
import ie.lyit.domain.AnalysisResult;

import java.util.Map;

import org.junit.Before;
import org.junit.Test;

public class VulnerabilityTypeDistributionAnalysisStrategyTest extends AbstractStrategyTest {

	@Before
	public void setUp() throws Exception {
		fixture = new VulnerabilityTypeDistributionAnalysisStrategy();

	}

	@Override
	protected void validateVanillaRun() {

		analysisResult = fixture.getAnalysisResult();
		countingMap = analysisResult.getCountingMap();

		assertNotNull(analysisResult);
		assertNotNull(countingMap);
		assertEquals(2, countingMap.size());
		assertEquals("Vulnerability Type Distribution", analysisResult.getNameOfAnalysis());
		assertEquals(0, analysisResult.getStringMap().size());
		assertEquals("Vulnerability Type", analysisResult.getTypeOfItemOfInterest());

	}

	@Test
	public void testPerformAnalysis_extraVulnerabilityAdded() {
		analysisListFactory.addVulnerability(vulnerabilityBuilder.name("CVE-2009-1234").description("This is a broken session").build());

		fixture.performAnalysis(analysisListFactory.create());

		AnalysisResult ar = fixture.getAnalysisResult();

		Map<String, Double> countingMap = ar.getCountingMap();

		assertEquals(3, countingMap.size());
		assertTrue(countingMap.containsKey("Denial of Service"));
		assertTrue(countingMap.containsKey("Cross-Site Scripting"));
		assertTrue(countingMap.containsKey("Broken Authentication and Session Management"));

	}

	@Test
	public void testPerformAnalysis_vanillaTest() {

		fixture.performAnalysis(analysisListFactory.create());

		AnalysisResult ar = fixture.getAnalysisResult();

		Map<String, Double> countingMap = ar.getCountingMap();

		assertEquals(2, countingMap.size());
		assertTrue(countingMap.containsKey("Denial of Service"));
		assertTrue(countingMap.containsKey("Cross-Site Scripting"));

	}
}